name: Gemini PR Summary and Explanation

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  pr-summary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install Gemini AI Dependencies
        run: npm install @google/generative-ai

      # PR 이벤트의 변경사항(diff) 추출
      - name: Fetch and Generate Git Diff for PR
        run: |
          git fetch origin "${{ github.event.pull_request.base.ref }}"
          git fetch origin "${{ github.event.pull_request.head.ref }}"
          git diff --unified=0 "origin/${{ github.event.pull_request.base.ref }}" > diff.txt

      # Gemini API를 호출하여 PR 제목, 설명, diff를 포함한 프롬프트로 요약 및 설명 생성
      - name: Call Gemini API to Generate PR Summary
        id: gemini_review
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const diff_output = fs.readFileSync("diff.txt", 'utf8');
            
            const { GoogleGenerativeAI } = require("@google/generative-ai");
            const genAI = new GoogleGenerativeAI("${{ secrets.GEMINI_API_KEY }}");
            const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

            let prompt = `
              다음은 깃허브 PR 에 올라온 수정된 코드들 입니다.
              Git diff를 분석하고, 각 변경 사항에 대해 파일명, 수정 내용, 역할을 아래와 같은 형식을 반드시 유지하여 요약해 주세요.

              가장 첫 부분에는 이 PR을 최종 요약하여 알려주세요. 최종 요약 부분의 제목은 "### PR 요약 :" 으로 해주세요.
              PR 요약의 모든 문장은 끝나면 <br>으로 띄워주세요. PR 요약이 끝난 후에는 <hr>을 하나 넣어주세요.

              (각 파일에 대한 요약은 반드시 코드 블럭으로 들어가지 않게 해주세요)
              
            	### <　경로를 제외한 파일명　> (이 부분의 <  >는 유지되게 해주세요)
            	- **역할 :**
            	(이 변경 사항의 역할 예: 기능 추가, 버그 수정, 리펙토링 등)
            	
            	- **수정 내용 :**
            	(수정된 내용의 간략한 설명. 모든 문장은 끝나면 <br>으로 띄워주세요. 이 부분에서는 줄을 바꾸고 들여쓰기가 유지되도록 띄어주세요.)

              각 파일 내용이 끝나면 <br>으로 한 줄을 띄워주세요.
              
              <git diff>${diff_output}</git diff>`;

            try {
              const result = await model.generateContent(prompt);
              const response = await result.response;
              const text = await response.text();

              if (!text || text.trim().length === 0) {
                console.log("❌ Gemini API 응답이 비어 있습니다.");
                throw new Error("Gemini API 응답이 비어 있습니다.");
              }

              fs.writeFileSync('review_result.txt', text);
              console.log("✅ Gemini API 응답을 review_result.txt 파일에 저장했습니다.");
            } catch (error) {
              console.error("❌ Gemini API 요청 중 오류 발생:", error);
              process.exit(1);
            }

      - name: Format PR Review Summary for Comment
        id: store
        run: |
          COMMENT_STRING=$(cat review_result.txt)
          
          # 줄바꿈 처리
          echo "comment<<EOF" >> $GITHUB_OUTPUT
          echo "# AI PR 요약" >> $GITHUB_OUTPUT
          echo -e "$COMMENT_STRING" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: Post PR Summary Comment
        uses: mshick/add-pr-comment@v2
        with:
          message: ${{ steps.store.outputs.comment }}  # 이 값을 PR 댓글로 추가
          repo-token: ${{ secrets.GITHUB_TOKEN }}
